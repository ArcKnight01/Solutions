import cv2
import numpy as np

#Script for determining the percentage of each color using PIL and using
#RGB representation. When running in the command line, type the image file. Type
#True if you want to see the image after the filters are applied

def get_mask(image, lower_bound, upper_bound):
    threshold = cv2.inRange(image, lower_bound, upper_bound)
    mask = cv2.bitwise_and(image, image, mask=threshold)
    return cv2.bitwise_and(image, mask)

def part_1(image):
    color_range= {}
    color_range["orange"] = [(0,40,140), (80,160,255)]
    print(color_range['orange'])
    color_amount = {"orange":0}

    orange_mask= cv2.inRange(image, color_range["orange"][0], color_range["orange"][1])
    orange_mask = (orange_mask > 80)*1
    

    color_amount["orange"]= np.sum(orange_mask) #cv2.countNonZero(orange_mask)
    print("NUM PIXELS: " + str(color_amount["orange"])) 
    total_pixels= image.shape[0] * image.shape[1]
    print("TOTAL PIXELS: "+ str(total_pixels))
    
    perc_orange= color_amount["orange"] / total_pixels
    area=perc_orange * 84633.4138
    print("AREA in mm^2 " + str(area)) 
    return (color_range, perc_orange, area)

def shape_id(image_file = 'test.jpg', show = False):

    folder_path=''
    
    image= cv2.imread('bt_pickles/bt_images/'+ image_file)
    image_HSV = cv2.cvtColor(image, cv2.COLOR_BGR2HSV) #Converts BGR image to HSV format
    
    color_range, perc_orange, area = part_1(image)
    
    print("The percentage of guanos is",round(100*perc_orange,2),"%")
    orange_mask= get_mask(image, *color_range['orange'])
    orange_mask= cv2.resize(orange_mask, (int(orange_mask.shape[1]*0.3), int(orange_mask.shape[0]*0.3)), interpolation=cv2.INTER_AREA)

    if show:
        cv2.imshow('Orange Mask', orange_mask)
        
        cv2.waitKey()
        cv2.destroyAllWindows()
    else:
        cv2.imwrite(folder_path + '/guano_mask.jpg', orange_mask)
        print('Image masks saved')

if __name__ == '__main__':
    import sys
    
    shape_id(*sys.argv[1:])